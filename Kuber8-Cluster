#Type the following command on the master node:
sudo hostnamectl set-hostname master
exec bash

#Type the following command on slave node:
sudo hostnamectl set-hostname slave
exec bash

#Note: Run the following command on the master and ##ALL nodes:                             
sudo kubeadm reset --force
sudo mkdir /etc/docker
sudo tee /etc/docker/daemon.json 0<<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF
sudo systemctl enable docker
sudo systemctl daemon-reload
sudo systemctl restart docker
sudo swapoff -a                                 Not required on nodes/slaves

#Now you can run the following commands on the master node:
log=${HOME}/install-leader.log
pod_network_cidr=192.168.0.0/16
sudo kubeadm init --pod-network-cidr ${pod_network_cidr} --ignore-preflight-errors all 2>&1 | tee ${log}     {if kubeadmin is absent: sudo snap install kubeadm --classic}

#Run the following commands on the master node to allow non-root users to access use kubeadm:
mkdir -p ${HOME}/.kube
sudo cp /etc/kubernetes/admin.conf ${HOME}/.kube/config
sudo chown -R $( id -u ):$( id -g ) ${HOME}/.kube/
echo 'source <(kubectl completion bash)' | tee --append ${HOME}/.bashrc
source ${HOME}/.bashrc

#Type the following command to add the Weave Net CNI plugin for highly available clusterUse:                          {kubectl cluster-info dump}
kubectl apply -f https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')
or
kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml                {https://www.weave.works/docs/net/latest/kubernetes/kube-addon/}

#Run the following command for joining the worker nodes to the cluster and save it:
sudo kubeadm token create --print-join-command

#Go to slave node and run the kubeadm join command copied in the previous step to join this node as a slave node to the cluster:
sudo kubeadm join x.x.x.x:6443 --token xxx.xxx --discovery-token-ca-cert-hash sha256:xxxxxx 


#Run the following commands:
kubectl get nodes
Output:
labsuser@master:~$ kubectl get nodes
NAME     STATUS   ROLES                  AGE     VERSION
master   Ready    control-plane,master   4m36s   v1.23.4
slave    Ready    <none>                 25s     v1.23.4

kubectl get namespaces
output
labsuser@master:~$ kubectl get namespaces
NAME              STATUS   AGE
default           Active   6m27s
kube-node-lease   Active   6m28s
kube-public       Active   6m28s
kube-system       Active   6m28s

kubectl get pods --all-namespaces
Output:
labsuser@master:~$ kubectl get pods --all-namespaces
NAMESPACE     NAME                             READY   STATUS    RESTARTS   AGE
kube-system   coredns-64897985d-fhp2d          1/1     Running   0          6m18s
kube-system   coredns-64897985d-zrwz4          1/1     Running   0          6m18s
kube-system   etcd-master                      1/1     Running   2          6m36s
kube-system   kube-apiserver-master            1/1     Running   2          6m33s
kube-system   kube-controller-manager-master   1/1     Running   2          6m33s
kube-system   kube-proxy-2lw8b                 1/1     Running   0          2m26s
kube-system   kube-proxy-mzm2h                 1/1     Running   0          6m19s
kube-system   kube-scheduler-master            1/1     Running   2          6m35s
kube-system   weave-net-6flkb                  2/2     Running   0          5m11s
kube-system   weave-net-kvfsr                  2/2     Running   0          2m26s
